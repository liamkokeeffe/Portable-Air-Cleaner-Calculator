{"version":3,"sources":["components/Calculator/StepTitle.js","components/Calculator/RoomDim.js","images/PoorVentilation.png","components/Calculator/Ventilation.js","components/Calculator/CADR.js","components/Calculator/Calculator.js","images/ach_chart.png","components/RoomSizeRec/RoomSizeRec.js","components/SortKeyChoice.js","components/FilterOptions.js","components/AirCleanerRecommendations/AirCleanerListItem.js","components/AirCleanerRecommendations/AirCleanerList.js","components/AirCleanerRecommendations/AirCleanerDetails.js","components/AirCleanerRecommendations/AirCleanerRecommendations.js","images/aircleaner_clipart.png","components/LandingPage/LandingPage.js","components/Home.js","components/About.js","components/AdditionalResources.js","components/Routes.js","images/departmentOfCommerceLogo.png","components/Header/Header.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["StepTitle","props","id","currentStep","totalSteps","title","RoomDim","useState","roomInfo","roomWidth","setRoomWidth","roomLength","setRoomLength","ceilingHeight","setCeilingHeight","className","onChange","e","unitSelectionMade","target","value","units","roomWidthEntered","parseInt","roomLengthEntered","ceilingHeightEntered","Ventilation","updateOutdoorVentilation","type","selected","src","VentilationImg","alt","CADR","cadr","setCadr","document","getElementById","style","visibility","cadrEntered","Calculator","getStepCount","calculatorType","changeScreens","floorAreaEntered","console","log","onShowResult","body","background","outdoorVentilation","onClick","RoomSizeRec","ach","ventilationToACH","getACH","Math","round","totalCFM","parseFloat","floorArea","calculateRoomSize","readOnly","getACHText","ACHChart","SortKeyChoice","updateSortKey","FilterOptions","filterOptions","setFilterOptions","maxPriceInput","useRef","maxNoiseInput","maxPowerInput","updateFilterOptions","newFilterOptions","maxPrice","current","maxNoise","maxPower","ref","AirCleanerListItem","airCleaner","imageSrc","name","width","height","price","noise","detailsClick","unsortedAirCleaners","minNoise","minPower","power","maxRoomSize","filterType","dimensions","frequency","manafacturer","link","AirCleanerList","airCleaners","setAirCleaners","airCleanerComponents","map","item","useEffect","forEach","sortedAirCleaners","filter","sort","a","b","sortKey","length","AirCleanerDetails","closeDetailsClick","AirCleanerRecommendations","setSortKey","maxWidth","maxLength","maxHeight","selectedAirCleaner","setSelectedAirCleaner","backToCalculator","LandingPage","setCalculatorType","AirCleanerImg","Home","setRoomInfo","resultType","setResultType","unitType","newRoomInfo","area","ventilationLevel","substring","About","href","AdditionalResources","Routes","exact","path","component","Header","logo","Layout","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7505b6c2.chunk.js","sourcesContent":["import './Calculator.css'\n\nexport function StepTitle(props) {\n    return (\n        <div id=\"title-wrapper\">\n            <div id=\"step-counter\">\n                <p id=\"step-counter-title\">Step {props.currentStep} of {props.totalSteps}</p>\n            </div>\n            <div id=\"step-title-wrapper\">\n                <h3 id=\"step-title\">{props.title}</h3>\n                <div id=\"underline-rect\"></div>\n            </div>\n        </div>\n    )\n}","import './Calculator.css';\nimport { useState } from \"react\";\n\nexport function RoomDim(props) {\n    const [roomWidth, setRoomWidth] = useState(props.roomInfo.roomWidth === 0 ? \"\" : props.roomInfo.roomWidth);\n    const [roomLength, setRoomLength] = useState(props.roomInfo.roomLength === 0 ? \"\" : props.roomInfo.roomLength);\n    const [ceilingHeight, setCeilingHeight] = useState(props.roomInfo.ceilingHeight === 0 ? \"\" : props.roomInfo.ceilingHeight);\n\n    return (\n        <div className=\"input-wrapper\" id=\"roomdim-wrapper\">\n            <div className=\"input-container\">\n                <p className=\"input-title\">Units</p>\n                <select className=\"user-input\" onChange={(e) => props.unitSelectionMade(e.target.value)} value={props.roomInfo.units}>\n                    <option value=\"feet\">Feet</option>\n                    <option value=\"meters\">Meters</option>\n                </select>\n            </div>\n            <div className=\"input-container\">\n                <p className=\"input-title\">Room Width</p>\n                <input className=\"user-input\" onChange={(e) => { \n                    setRoomWidth(e.target.value);\n                    props.roomWidthEntered(parseInt(e.target.value))\n                }} value={roomWidth} />\n            </div>\n            <div className=\"input-container\">\n                <p className=\"input-title\">Room Length</p>\n                <input className=\"user-input\" onChange={(e) => {\n                    setRoomLength(e.target.value);\n                    props.roomLengthEntered(parseInt(e.target.value));\n                }} value={roomLength} />\n            </div>\n            <div className=\"input-container\">\n                <p className=\"input-title\">Ceiling Height</p>\n                <input className=\"user-input\" onChange={(e) => { \n                    setCeilingHeight(e.target.value);\n                    props.ceilingHeightEntered(parseInt(e.target.value));\n                    }} value={ceilingHeight} />\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/PoorVentilation.ec84bc1a.png\";","import './Calculator.css';\nimport VentilationImg from \"../../images/PoorVentilation.png\";\n\nexport function Ventilation(props) {\n\n    return (\n        <div className=\"input-wrapper\" id=\"ventilation-wrapper\">\n            <div id=\"ventilation-input-box\">\n                <p className=\"input-title\">Ventilation</p>\n                <select className=\"user-input\" onChange={(e) => props.updateOutdoorVentilation(e.target.value)} value={props.type}>\n                    <option value=\"Low\" selected>Low</option>\n                    <option value=\"Typical\">Typical</option>\n                    <option value=\"Good\">Good</option>\n                    <option value=\"Enhanced\">Enhanced</option>\n                </select>\n                <p id=\"ventilation-text\"><span id=\"ventilation-text-title\">{props.type}</span><br /> Select this if your environment has poor ventilation or you're not sure (for reference, a typical U.S. home is 0.5 ACH)</p>\n            </div>\n            <div id=\"ventilation-info-box\">\n                <p className=\"input-title\">Example Room Size 146ft^2 x 9ft</p>\n                <img src={VentilationImg} alt=\"Example room with low ventilation\" />\n            </div>\n        </div>\n    )\n}","import \"./Calculator.css\";\nimport { useState } from \"react\";\n\nexport function CADR(props) {\n\n    const [cadr, setCadr] = useState(props.roomInfo.cadr === 0 ? \"\" : props.roomInfo.cadr);\n\n    function checkValue(value) {\n        if (value === \"I'm not sure\") {\n            document.getElementById(\"cadr-input-wrapper\").style.visibility = \"visible\"\n        } else {\n            // Should get the model's CADR here and pass it through cadr entered (200 just a default value for now)\n            document.getElementById(\"cadr-input-wrapper\").style.visibility = \"hidden\"\n            props.cadrEntered(200);\n        }\n    }\n    \n    return (\n        <div className=\"input-wrapper\" id=\"cadr-wrapper\">\n            <p className=\"input-title\">What is the model name of your air cleaner?</p>\n            <select className=\"user-input\" onChange={(e) => checkValue(e.target.value)}>\n                <option></option>\n                <option value=\"Levoit Vital 100 True HEPA Purifier\">Levoit Vital 100 True HEPA Purifier</option>\n                <option value=\"Whirlpool Vital 100 True HEPA Purifier\">Whirlpool Vital 100 True HEPA Purifier</option>\n                <option value=\"Conway Vital 100 True HEPA Purifier\">Conway Vital 100 True HEPA Purifier</option>\n                <option value=\"I'm not sure\">I'm not sure</option>\n            </select>\n            <div id=\"cadr-input-wrapper\">\n                <p className=\"input-title\">What is the Clean Air Delivery Rate (CADR) of your air cleaner?</p>\n                <input className=\"user-input\" onChange={(e) => {\n                    setCadr(e.target.value);\n                    props.cadrEntered(parseInt(e.target.value));}} value={cadr} />\n            </div>\n        </div>\n    )\n}","import \"./Calculator.css\"\nimport {StepTitle} from \"./StepTitle.js\"\nimport {RoomDim} from \"./RoomDim.js\"\nimport {Ventilation} from \"./Ventilation.js\"\nimport {CADR} from \"./CADR.js\"\n\nexport function Calculator(props) {\n    function getTitle() {\n        document.body.style.background = \"rgb(234,95,20,0.25)\";\n        return props.calculatorType === \"find\" ? \"Find Air Cleaner\" : \"Test Air Cleaner Efficiency\";\n    }\n\n    function getStepCount() {\n        return props.calculatorType === \"find\" ? \"2\" : \"3\";\n    }\n\n    function changeScreens() {\n        if (inputIsValid()) {\n            props.onShowResult(props.calculatorType);\n        } \n    }\n\n    function inputIsValid() {\n        if (props.calculatorType === \"find\" && (props.roomInfo.roomWidth === 0 || props.roomInfo.roomLength === 0 || props.roomInfo.ceilingHeight === 0)) {\n            console.log(\"Please fill out all fields to continue\");\n            return false;\n        } else if (props.calculatorType === \"test\" && (props.roomInfo.roomWidth === 0 || props.roomInfo.roomLength === 0 || props.roomInfo.ceilingHeight === 0 || props.roomInfo.cadr === 0)) {\n            console.log(\"Please fill out all fields to continue\");\n            return false;\n        } else {\n            props.floorAreaEntered(props.roomInfo.roomWidth * props.roomInfo.roomLength);\n            return true;\n        }\n    }\n\n    return (\n        <div id=\"calculator-wrapper\">\n            <h2 id=\"calculator-title\">{getTitle()}</h2>   \n            <div className=\"step-wrapper\"> \n                <StepTitle title = \"Room Size\" currentStep = \"1\" totalSteps = {getStepCount()} />\n                <RoomDim unitSelectionMade={props.unitSelectionMade} roomWidthEntered={props.roomWidthEntered} roomLengthEntered={props.roomLengthEntered} ceilingHeightEntered={props.ceilingHeightEntered} roomInfo={props.roomInfo} />\n            </div>\n            <div className=\"step-wrapper\">\n                <StepTitle title = \"Rate Your Current Ventilation\" currentStep = \"2\" totalSteps = {getStepCount()} />\n                <Ventilation updateOutdoorVentilation={props.updateOutdoorVentilation} type={props.roomInfo.outdoorVentilation}/>\n            </div>\n            {props.calculatorType === \"test\" && <div className=\"step-wrapper\">\n                <StepTitle title = \"Clean Air Delivery Rate\" currentStep = \"3\" totalSteps = \"3\" />\n                <CADR cadrEntered={props.cadrEntered} roomInfo={props.roomInfo} />\n            </div>}\n            <div id=\"button-wrapper\">\n                <button id=\"results-btn\" onClick={(e) => changeScreens()}>VIEW RESULTS</button>\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/ach_chart.505ff22d.png\";","import './RoomSizeRec.css'\nimport ACHChart from \"../../images/ach_chart.png\"\n\nexport function RoomSizeRec(props) {\n    const ventilationToACH = {\n        'Low' : 1,\n        'Typical' : 1.5,\n        'Good' : 3,\n        'Enhanced' : 4\n    }\n\n    function getACH() {\n        if (props.roomInfo.units === \"feet\") {\n            return (Math.round((props.roomInfo.cadr * 60 / ((props.roomInfo.roomWidth * props.roomInfo.roomLength) * props.roomInfo.ceilingHeight)) * 10) / 10) + ventilationToACH[props.roomInfo.outdoorVentilation]\n        } else {\n            return (Math.round(((props.roomInfo.cadr / .58) / ((props.roomInfo.roomWidth * props.roomInfo.roomLength) * props.roomInfo.ceilingHeight)) * 10) / 10) + ventilationToACH[props.roomInfo.outdoorVentilation]\n        }\n    }\n\n    function getACHText(ach) {\n        if (ach < 3) {\n            return \"Your room meets a low level of ACH\";\n        } else if (ach < 4) {\n            return \"Your room meets the bare minimum of ACH\";\n        } else if (ach < 5) {\n            return \"Your room meets a good level of ACH\";\n        } else if (ach < 6) {\n            return \"Your room meets an excellent level of ACH!\";\n        } else {\n            return \"Your room meets an ideal level of ACH!\";\n        }\n    }\n\n    function getACHColor(ach) {\n        if (ach < 3) {\n            return \"#FF0000\";\n        } else if (ach < 4) {\n            return \"#EA9999\";\n        } else if (ach < 5) {\n            return \"#FFD966\";\n        } else if (ach < 6) {\n            return \"#00FF00\";\n        } else {\n            return \"#38761D\";\n        }\n    }\n\n    function calculateRoomSize() {\n        let totalCFM = 0;\n        if (props.roomInfo.units === \"feet\") {\n            totalCFM = ((ventilationToACH[props.roomInfo.outdoorVentilation] * ((props.roomInfo.roomWidth * props.roomInfo.roomLength) * props.roomInfo.ceilingHeight)) / 60) + parseFloat(props.roomInfo.cadr);\n            console.log(totalCFM)\n            return Math.round((totalCFM * 60) / (5 * props.roomInfo.ceilingHeight));\n        } else {\n            totalCFM = ((ventilationToACH[props.roomInfo.outdoorVentilation] * props.roomInfo.floorArea * props.roomInfo.ceilingHeight * 35.3147) / 60) + parseFloat(props.roomInfo.cadr);\n            return Math.round(((totalCFM*60) / 35.315) / (5 * props.roomInfo.ceilingHeight));\n        }\n    }\n    return (\n        <div id=\"roomsize-wrapper\">\n            <div id=\"roomsize-header-wrapper\">\n                <h2 id=\"roomsize-header-title\">Recommended Room Size for this Air Cleaner</h2>\n                <input id=\"roomsize-header-input\" value={calculateRoomSize() + \" ft^2\"} readOnly />\n            </div>\n            <div id=\"roomsize-content-wrapper\">\n                <p id=\"roomsize-content-title\">Is Your Room Meeting the Target Air Changes Per Hour?</p>\n                <div id=\"roomsize-content-box\">\n                    <div id=\"roomsize-content-ach\">\n                            <p className=\"content-text\">Total Air Changes in the room per hour (ACH):</p>\n                            <div id=\"roomsize-content-number\" style={{background: getACHColor(getACH())}}>\n                                <p>{getACH()}</p>\n                            </div>\n                            <span id=\"results-message\">{getACHText(getACH())}</span>\n                    </div>\n                    <div id=\"roomsize-content-chart\">\n                        <p className=\"content-text\">Target is at least 5 Air Changes Per Hour</p>\n                        <img src={ACHChart} alt=\"ACH Levels Chart\"/>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}","import './SortKeyChoice.css';\n\nexport function SortKeyChoice(props) {\n    return (\n        <div id='sort-key-choice-container'>\n            <div id='sort-key-choice'>\n                <p>Sort By</p>\n                <select id='sort-key-choice-dropdown' onChange={(e) => props.updateSortKey(e.target.value)}>\n                    <option value='price'>Price</option>\n                    <option value='noise'>Noise</option>\n                    <option value='ach'>ACH (Air Changes per Hour)</option>\n                </select>\n            </div>\n        </div>\n    )\n}","import { useRef, useState } from 'react';\nimport './FilterOptions.css';\n\nexport function FilterOptions(props) {\n\n    const [filterOptions, setFilterOptions] = useState({});\n    const maxPriceInput = useRef(null);\n    const maxNoiseInput = useRef(null);\n    const maxPowerInput = useRef(null);\n\n    function clearFilterOptions() {\n        maxPriceInput.current.value = null;\n        let newFilterOptions = {\n            maxPrice: -1,\n            maxNoise: -1,\n            maxPower: -1,\n        };\n        props.setFilterOptions(newFilterOptions);\n    }\n\n    function updateFilterOptions() {\n        const newFilterOptions = {\n            maxPrice: maxPriceInput.current.value !== '' ? maxPriceInput.current.value : -1,\n            maxNoise: maxNoiseInput.current.value !== '' ? maxNoiseInput.current.value : -1,\n            maxPower: maxPowerInput.current.value !== '' ? maxPowerInput.current.value : -1\n        };\n        setFilterOptions(newFilterOptions);\n    }\n\n    return (\n        <div id='filter-options'>\n            <div id='filter-options-title-container'>\n                <p id='filter-options-title'>Filter by:</p>\n                <button id='filter-options-clear-all-button' onClick={clearFilterOptions}>clear all</button>\n            </div>\n\n            <div className='filter-option-container'>\n                <p className='filter-option-title'>Max Price (U.S dollars)</p>                \n                <div className='filter-option'>\n                    <p className='filter-option-unit-dollar'>$</p>\n                    <input className='filter-option-input' onChange={() => updateFilterOptions()} ref={maxPriceInput} />\n                    <button className='submit-filter-options-button' onClick={() => {props.setFilterOptions(filterOptions)}}>Submit</button>\n                </div>\n            </div>\n            <div className='filter-option-container'>\n                <p className='filter-option-title'>Max Noise (decibels)</p>\n                <div className='filter-option'>\n                    <input className='filter-option-input' onChange={() => updateFilterOptions()} ref={maxNoiseInput} />\n                    <p className='filter-option-unit-other'>dB</p>\n                    <button className='submit-filter-options-button' onClick={() => {props.setFilterOptions(filterOptions)}}>Submit</button>\n                </div>\n            </div>\n            <div id='last-filter-option-container' className='filter-option-container'>\n                <p className='filter-option-title'>Max Power Usage (Watts)</p>\n                <div className='filter-option'>\n                    <input className='filter-option-input' onChange={() => updateFilterOptions()} ref={maxPowerInput} />\n                    <p className='filter-option-unit-other'>W</p>\n                    <button className='submit-filter-options-button' onClick={() => {props.setFilterOptions(filterOptions)}}>Submit</button>\n                </div>\n            </div>\n        </div>\n    );\n}","import './AirCleanerListItem.css';\n\nexport function AirCleanerListItem(props) {\n\n    return (\n        <div id='air-cleaner-list-item'>\n            <div id='air-cleaner-image-container'>\n                <div id='air-cleaner-image'>\n                    <img src={props.airCleaner.imageSrc} alt={props.airCleaner.name} width='300' height='200'/>\n                </div>\n            </div>\n            <div id='air-cleaner-high-level-details'>\n                <p id='air-cleaner-name'>{props.airCleaner.name}</p>\n                <p>Price: ${props.airCleaner.price}</p>\n                <p>Air changes per hour for your space: {props.airCleaner.ach}</p>\n                <p>Noise Level: {props.airCleaner.noise < 0 ? 'Not available' : props.airCleaner.noise + ' dB'}</p>\n                <button onClick={() => {props.detailsClick(props.airCleaner)}}>Details</button>\n            </div>\n        </div>\n    );\n}","import './AirCleanerList.css';\nimport { AirCleanerListItem } from './AirCleanerListItem';\nimport {useEffect, useState} from 'react';\n\nconst unsortedAirCleaners = [\n    {name:'Levoit Vital 100 True HEPA Purifier', \n    imageSrc: 'https://images.squarespace-cdn.com/content/v1/5914b7ca46c3c432a410a716/1598433446634-FKEO9ZBTHDGPXO0XYZH5/ke17ZwdGBToddI8pDm48kJUlZr2Ql5GtSKWrQpjur5t7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z5QPOohDIaIeljMHgDF5CVlOqpeNLcJ80NK65_fV7S1UfNdxJhjhuaNor070w_QAc94zjGLGXCa1tSmDVMXf8RUVhMJRmnnhuU1v2M8fLFyJw/Vital100LP7.jpg?format=300w', \n    price: 119.99, \n    minNoise: 23, noise: 23, \n    cadr: 130, minPower: 55,\n   power: 55, maxRoomSize: 0, \n    filterType: '',\n    dimensions: '12.8\" x 6.4\" x 16.1\"',\n    frequency: 60, manafacturer: '', link:''},\n\n    {name:'Whirlpool® WPT80 Whispure™ Large Tower Air Purifier', imageSrc: 'https://i5.walmartimages.com/asr/85569bb9-9ba5-44cc-97d6-bb67681dbe34.71db55e05471e0e951f0cb7582391a71.jpeg?odnWidth=612&odnHeight=612&odnBg=ffffff', price: 167.99, minNoise: -1, noise: -1, cadr: 142, minPower: 43, power: 43, maxRoomSize: 0, filterType: '', dimensions: '8.46\" x 6.93\" x 23\"', frequency: 60, manafacturer: '', link:''},\n\n    {name:'Oransi OV200 Air Purifier', imageSrc: 'https://cdn.shopify.com/s/files/1/0488/2877/6600/products/ys4mulijrxffglnignja_large.jpg', price: 329.0, minNoise: 30, noise: 54, cadr: 150, minPower: 60, power:60, maxRoomSize: 0, filterType: '', dimensions: '13\" x 23\" x 7\"', frequency: 60, manafacturer: '', link:''},\n\n    {name:'Coway Airmega 150', imageSrc: 'https://cdn.accentuate.io/35302008225951/1614359585901/airmega00083-47re2.jpg', price: 189.99, minNoise: -1, noise: 48.3, cadr: 219, minPower: 60, power: 60, maxRoomSize: 0, filterType: '', dimensions: '13.4\" x 6.5\" x 18.5\"', frequency: 0, manafacturer: '', link:''},\n\n    {name:'BioGS 2.0 Ultra Quiet Air Purifier SPA- 550A', imageSrc: 'https://cdn.shopify.com/s/files/1/0260/5699/files/biogs2_home_chest_ukulele_couch_720x.jpg', price: 369.95, minNoise: 22.8, noise: 48.6, cadr: 162, minPower: 5, power: 29, maxRoomSize: 0, filterType: '', dimensions: '22.2\" x 16.6\" x 9.8\"', frequency: 0, manafacturer: '', link:''}];\n\nexport function AirCleanerList(props) {\n    const [airCleaners, setAirCleaners] = useState([]);\n\n    const airCleanerComponents = airCleaners.map((item) => \n    <AirCleanerListItem airCleaner={item} detailsClick={props.detailsClick} />\n    );\n\n    useEffect(() => {\n        let outdoorVentilation = 1;\n        if (props.roomInfo.outdoorVentilation === 'Typical') {\n            outdoorVentilation = 1.5\n        } else if (props.roomInfo.outdoorVentilation === 'Good') {\n            outdoorVentilation = 3;\n        } else if (props.roomInfo.outdoorVentilation === 'Enhanced') {\n            outdoorVentilation = 4;\n        }\n        \n        unsortedAirCleaners.forEach((airCleaner) => {\n            airCleaner.ach = Math.round((airCleaner.cadr * 60) / (props.roomInfo.floorArea * props.roomInfo.ceilingHeight)) + outdoorVentilation;      \n        });\n\n        let filteredUnsortedAirCleaners = [...unsortedAirCleaners].filter((airCleaner) => {\n            if (airCleaner.ach < 4) { // \"good\" ACH or better\n                return false;\n            }\n\n            if ((props.filterOptions.maxPrice > -1) && (props.filterOptions.maxPrice < airCleaner.price)) {\n                return false;\n            }\n            if ((props.filterOptions.maxNoise > -1) && (props.filterOptions.maxNoise < airCleaner.noise)) {\n                return false;\n            }\n            if ((props.filterOptions.maxPower > -1) && (props.filterOptions.maxPower < airCleaner.power)) {\n                return false;\n            }\n\n            return true;\n        });\n    \n        let sortedAirCleaners = filteredUnsortedAirCleaners.sort((a, b) => {\n            if (a[props.sortKey] === -1 && b[props.sortKey] !== -1) {\n                return 1;\n            }\n            if (b[props.sortKey] === -1 && a[props.sortKey] !== -1) {\n                return -1;\n            }\n            \n            if (props.sortKey === 'ach') {\n                return b[props.sortKey] - a[props.sortKey];\n            }\n            return a[props.sortKey] - b[props.sortKey];\n        });\n        \n        setAirCleaners(sortedAirCleaners);\n    \n    }, [props])\n\n    return (\n        <div id='air-cleaner-list'>\n            {airCleaners.length > 0 ? airCleanerComponents : \n                <div id='no-air-cleaners-found-message-container'>\n                    <p>Sorry, but there were no portable air cleaners found.</p>\n                </div>\n            }\n        </div>\n    );\n}","import './AirCleanerDetails.css';\n\nexport function AirCleanerDetails(props) {\n    return(\n        <div id='air-cleaner-details-container'>\n            <div id='air-cleaner-details-header'>\n                <h3>{props.airCleaner.name}</h3>\n                <button id='close-air-cleaner-details-button' onClick={() => {props.closeDetailsClick()}}>Close</button>\n            </div>\n            <div id='air-cleaner-details-body'>\n                <img src={props.airCleaner.imageSrc} alt={props.airCleaner.name} width='240' height='200' />\n                <div>\n                <p><strong>Price:</strong> ${props.airCleaner.price}</p>\n                <p><strong>Noise:</strong> {props.airCleaner.noise === -1 ? 'Not available' : props.airCleaner.noise + ' dB'}</p>\n                <p><strong>Power Requirement:</strong> {props.airCleaner.power === -1 ? 'Not available' : props.airCleaner.power + ' W'}</p>\n                <p><strong>Clean Air Delivery Rate (CADR):</strong> {props.airCleaner.cadr}</p>\n                <p><strong>Dimensions:</strong> {props.airCleaner.dimensions}</p>\n                <p><strong>Frequency:</strong> {props.airCleaner.frequency} Hz</p>\n                <p><strong>Maximum Room Size:</strong> {props.airCleaner.maxRoomSize} square feet</p>\n                </div>\n            </div>\n        </div>\n    );\n}","import {useState} from 'react';\nimport {SortKeyChoice} from '../SortKeyChoice.js';\nimport {FilterOptions} from '../FilterOptions.js';\nimport {AirCleanerList} from './AirCleanerList.js';\nimport {AirCleanerDetails} from './AirCleanerDetails.js';\nimport './AirCleanerRecommendations.css';\n\nexport function AirCleanerRecommendations(props) {\n    const filterOptionsInit = {\n        maxPrice : -1,\n        maxNoise : -1,\n        maxWidth : -1,\n        maxLength : -1,\n        maxHeight : -1,\n        maxPower : -1,\n    }\n\n    const [sortKey, setSortKey] = useState('price');\n    const [filterOptions, setFilterOptions] = useState(filterOptionsInit);\n    const [selectedAirCleaner, setSelectedAirCleaner] = useState(null);\n\n    function detailsClick(airCleaner) {\n        setSelectedAirCleaner(airCleaner);\n    }\n\n    function closeDetailsClick() {\n        setSelectedAirCleaner(null);\n    }\n\n    return (\n        <div id='air-cleaner-recommendations-container'>            \n            <button id='back-button' onClick={() => {props.backToCalculator()}}>{'< Go Back'}</button>\n            <div id='air-cleaner-recommendations'>\n                <FilterOptions filterOptions={filterOptions} setFilterOptions={setFilterOptions} />\n                <div id='air-cleaner-recommendations-page-center-container'>\n                    <div id='air-cleaner-recommendations-page-center'>                        \n                        <div id='air-cleaner-recommendations-title-container'>\n                            <h2 id='air-cleaner-recommendations-title'>Recommended Portable Air Cleaners</h2>\n                        </div>\n                        <SortKeyChoice updateSortKey={setSortKey} />\n                        { selectedAirCleaner === null && <AirCleanerList roomInfo={props.roomInfo} sortKey={sortKey}\n                                    filterOptions={filterOptions} detailsClick={detailsClick} />}\n                        { selectedAirCleaner !== null && <AirCleanerDetails airCleaner={selectedAirCleaner} closeDetailsClick={closeDetailsClick} /> }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/aircleaner_clipart.e443db04.png\";","import './LandingPage.css'\nimport AirCleanerImg from '../../images/aircleaner_clipart.png'\n\nexport function LandingPage(props) {\n\n    return (\n        <div id=\"body-container\">\n            <div id=\"text-container\">\n                <h2 id=\"title\">Portable Air Cleaner Calculator</h2>\n                <p id=\"text-calculator-description\">Click a button below to calculate which portable air cleaner is best suited \n                for your business to help keep employees and customers safe or test your own portable air cleaner to find out whether \n                it’s effectively ventilating your business.</p>\n                <div id=\"buttons-container\">\n                    <button className=\"subheader--btn\" id=\"subheader--btn-find\" onClick={() => props.setCalculatorType('find')}>FIND AN AIR CLEANER</button>\n                    <button className=\"subheader--btn\" id=\"subheader--btn-test\" onClick={() => props.setCalculatorType('test')}>TEST MY AIR CLEANER'S EFFICIENCY</button>\n                </div>\n            </div>\n            <div id=\"img-container\">\n                <img id=\"img-aircleaner\"src={AirCleanerImg} alt=\"Animated Portable Air Cleaner\"/>\n            </div>\n        </div>\n    )\n}","import { useState } from 'react';\nimport { Calculator } from './Calculator/Calculator.js';\nimport {RoomSizeRec} from './RoomSizeRec/RoomSizeRec.js';\nimport {AirCleanerRecommendations} from './AirCleanerRecommendations/AirCleanerRecommendations.js';\nimport { LandingPage } from './LandingPage/LandingPage.js';\n\nexport function Home() {\n\n    let roomInfoInit = {\n        roomWidth : 0,\n        roomLength: 0,\n        floorArea: 0,\n        ceilingHeight : 0,\n        units : 'feet',\n        outdoorVentilation : 'Low',\n        cadr : 0\n    }\n\n    const [roomInfo, setRoomInfo] = useState(roomInfoInit);\n    const [calculatorType, setCalculatorType] = useState(null);\n    const [resultType, setResultType] = useState(null);\n\n    function showResults(type) {\n        setResultType(type);\n        setCalculatorType('hidden_' + calculatorType);\n    }\n    \n    function unitSelectionMade(unitType) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : unitType,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr\n        }\n        setRoomInfo(newRoomInfo)\n    }\n\n    function roomWidthEntered(width) {\n        let newRoomInfo = {\n            roomWidth : width,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function roomLengthEntered(length) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : length,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function floorAreaEntered(area) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : area,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function ceilingHeightEntered(height) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : height,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function cadrEntered(cadr) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : cadr\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function updateOutdoorVentilation(ventilationLevel) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : ventilationLevel,\n            cadr : roomInfo.cadr\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function backToCalculator() {\n        setResultType(null);\n        setCalculatorType(calculatorType.substring(7));\n    }\n\n    return (\n        <div>\n            {calculatorType === null && resultType === null && <LandingPage setCalculatorType={setCalculatorType}/>}\n            {(calculatorType === 'find' || calculatorType === 'test') && \n                <Calculator calculatorType={calculatorType} roomInfo={roomInfo} unitSelectionMade={unitSelectionMade}\n                roomWidthEntered={roomWidthEntered} roomLengthEntered={roomLengthEntered} floorAreaEntered={floorAreaEntered} ceilingHeightEntered={ceilingHeightEntered} cadrEntered={cadrEntered}  onShowResult={showResults} updateOutdoorVentilation={updateOutdoorVentilation} />}\n            {resultType !== null && \n                (resultType === 'find' ? <AirCleanerRecommendations roomInfo={roomInfo} backToCalculator={backToCalculator} /> : <RoomSizeRec roomInfo={roomInfo}/>)}\n        </div>\n    )\n}","\nexport function About() {\n    return (\n        <div>\n            <p>\n                This application was built by students at the University of Washington Information School. It is based on <a href='https://docs.google.com/spreadsheets/d/1NEhk1IEdbEi_b3wa6gI_zNs8uBJjlSS-86d4b7bW098/edit#gid=1882881703'>this</a> tool.\n                <br/>\n                <br/>\n                No one was paid to build this application. The air cleaner products being suggested are not being endorsed.\n                <br/>\n                <br/>\n                For more information about preventing the spread of COVID-19 indoors, portable air cleaners, and more, please select the \"Additional Resources\" tab at the top of the page.\n            </p>\n        </div>\n    )\n}","\nexport function AdditionalResources() {\n    return (\n        <div>\n            <h1>Preventing the spread of COVID-19 Indoors</h1>\n            <p>Links</p>\n            <h1>About Portable Air Cleaners</h1>\n            <p>Links</p>\n        </div>\n    )\n}","import React from 'react';\nimport {Home} from './Home.js';\nimport {About} from './About.js';\nimport {AdditionalResources} from './AdditionalResources.js';\nimport {Switch, Route} from 'react-router-dom';\n\nexport function Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/additional-resources' component={AdditionalResources} />\n            </Switch>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/departmentOfCommerceLogo.c7979d81.png\";","import './Header.css'\nimport logo from '../../images/departmentOfCommerceLogo.png';\nimport { Link } from 'react-router-dom'\n\nexport function Header() {\n    return (\n        <div id=\"header-container\">\n            <header>\n                <div id=\"logo-container\">\n                    <img className='logo' src={logo} alt='Washington State Department of Commerce Logo' width='550' height='250'/>\n                </div>\n            </header>\n            <div id=\"tabs-container\">\n                <div className='tab'>\n                    <a href=\"/\" className=\"tab\">Calculator</a>\n                    <a href=\"/about\" className=\"tab\">About</a>\n                    <a href=\"/additional-resources\" className=\"tab\">Resources</a>\n                </div>\n            </div>\n        </div>\n    )\n}","import {Header} from \"./Header/Header.js\"\n\nexport function Layout({children}) {\n    return (\n        <div>\n            <Header />\n            <div>\n                {children}\n            </div>\n            {/* <Footer /> */}\n        </div>\n    )\n}","import { BrowserRouter as Router } from 'react-router-dom';\nimport { Routes } from './components/Routes.js'\nimport './App.css';\nimport { Layout } from './components/Layout.js';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Router>\n            <Routes />\n        </Router>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n     <Router>\n       <App />\n     </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}