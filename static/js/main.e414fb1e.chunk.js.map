{"version":3,"sources":["images/roomdim_clipart.png","components/Calculator/RoomDim.js","images/ventilation_clipart.png","components/Calculator/Ventilation.js","images/cadr_clipart.png","components/Calculator/CADR.js","images/density_clipart.png","components/Calculator/Density.js","components/Calculator/Calculator.js","components/RoomSizeRec/RoomSizeRec.js","components/AirCleanerRecommendations/SortKeyChoice.js","components/AirCleanerRecommendations/FilterOptions.js","components/AirCleanerRecommendations/AirCleanerListItem.js","components/AirCleanerRecommendations/AirCleanerList.js","components/AirCleanerRecommendations/AirCleanerDetails.js","images/various_portable_air_cleaners.png","components/AirCleanerRecommendations/AirCleanerRecommendations.js","images/aircleaner_animated.png","components/LandingPage/LandingPage.js","air_cleaner_list.csv","components/Home.js","images/coral_logo.png","images/about_product.png","images/commerce_about_logo.png","components/About.js","components/AdditionalResources.js","components/Help.js","components/Routes.js","images/departmentOfCommerceLogo.png","components/Layout/Header.js","components/LanguageSelection.js","components/Layout/Footer.js","components/Layout/Layout.js","App.js","reportWebVitals.js","i18n.js","index.js"],"names":["RoomDim","props","useState","roomInfo","roomWidth","setRoomWidth","roomLength","setRoomLength","ceilingHeight","setCeilingHeight","floorArea","setFloorArea","id","src","roomDimPic","alt","className","htmlFor","onChange","e","unitSelectionMade","target","value","units","roomWidthEntered","parseFloat","roomLengthEntered","floorAreaEntered","ceilingHeightEntered","Ventilation","updateOutdoorVentilation","type","VentilationImg","CADR","cadr","setCadr","CadrImg","cadrEntered","parseInt","Density","occupancyText","setOccupancyText","roomType","_setRoomType","usableSpace","_setUsableSpace","maxOccupancy","_setMaxOccupancy","roomTypeRef","React","useRef","usableSpaceRef","maxOccupancyRef","roomTypeToPersonUsableSpace","getOccupancyNumber","console","log","current","document","getElementById","style","visibility","method1Calc","method2Calc","isNaN","Math","floor","data","updateRoomType","disabled","selected","updateUsableSpace","updateOccupancy","densityClipArt","Calculator","showResults","calculatorType","onShowResult","window","scrollTo","body","background","outdoorVentilation","onClick","RoomSizeRec","ach","ventilationToACH","getACH","round","unselectable","backToCalculator","nrOfLevels","colors","arcPadding","arcsLength","animate","percent","getPercent","formatTextValue","totalCFM","calculateRoomSize","toUpperCase","SortKeyChoice","updateSortKey","FilterOptions","filterOptions","setFilterOptions","maxPriceInput","maxNoiseInput","maxPowerInput","updateFilterOptions","newFilterOptions","maxPrice","maxNoise","maxPower","data-testid","ref","AirCleanerListItem","airCleaner","imageLink","name","price","noise","detailsClick","AirCleanerList","recommendedAirCleaners","setRecommendedAirCleaners","airCleanerComponents","map","item","useEffect","airCleaners","forEach","sortedAirCleaners","filter","power","sort","a","b","sortKey","calculate","length","AirCleanerDetails","closeDetailsClick","href","link","size","airCleanerSize","firstInchMarkInsertionLocation","indexOf","secondInchMarkInsertionLocation","lastIndexOf","slice","sizeWithInchMarks","maxRoomSize","AirCleanerRecommendations","setSortKey","maxWidth","maxLength","maxHeight","selectedAirCleaner","setSelectedAirCleaner","VariousPortableAirCleaners","LandingPage","t","useTranslation","setCalculatorType","AirCleanerImg","Home","setRoomInfo","resultType","setResultType","undefined","setAirCleaners","substring","d3","d","result","getAirCleaners","unitType","newRoomInfo","width","area","height","ventilationLevel","About","teamLogo","aboutProduct","commerceLogo","AdditionalResources","Help","Routes","exact","path","component","Header","logo","to","querySelector","display","LanguageSelection","i18n","changeLanguage","language","getCurrentLanguage","Footer","Layout","children","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","es","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","supportedLngs","detection","order","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback"],"mappings":"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","file":"static/js/main.e414fb1e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/roomdim_clipart.2a654541.png\";","import './Calculator.css';\nimport { useState } from \"react\";\nimport roomDimPic from '../../images/roomdim_clipart.png'\n\nexport function RoomDim(props) {\n    const [roomWidth, setRoomWidth] = useState(props.roomInfo.roomWidth === 0 ? \"\" : props.roomInfo.roomWidth);\n    const [roomLength, setRoomLength] = useState(props.roomInfo.roomLength === 0 ? \"\" : props.roomInfo.roomLength);\n    const [ceilingHeight, setCeilingHeight] = useState(props.roomInfo.ceilingHeight === 0 ? \"\" : props.roomInfo.ceilingHeight);\n    const [floorArea, setFloorArea] = useState(props.roomInfo.floorArea === 0 ? \"\" : props.roomInfo.floorArea);\n\n    return (\n        <div id=\"roomdim-wrapper\">\n            <img src={roomDimPic} alt=\"Room Dimmension ClipArt\" id=\"img-roomdim\"/>\n            <div id=\"roomdim-right-container\">\n                <div className=\"input-wrapper\" id=\"roomdim-wrapper\">\n                    <div>\n                        <label htmlFor=\"unit-selection-dropdown\" className=\"input-title\">Units</label>\n                        <select id=\"unit-selection-dropdown\" className=\"user-input\" onChange={(e) => props.unitSelectionMade(e.target.value)} value={props.roomInfo.units}>\n                            <option value=\"feet\">Feet</option>\n                            <option value=\"meters\">Meters</option>\n                        </select>\n                    </div>\n                    <div>\n                        <label htmlFor=\"room-width-input\" className=\"input-title\">Room Width</label>\n                        <input id=\"room-width-input\" className=\"user-input\" onChange={(e) => { \n                            setRoomWidth(e.target.value);\n                            props.roomWidthEntered(parseFloat(e.target.value))\n                        }} value={roomWidth} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"room-length-input\" className=\"input-title\">Room Length</label>\n                        <input id=\"room-length-input\" className=\"user-input\" onChange={(e) => {\n                            setRoomLength(e.target.value);\n                            props.roomLengthEntered(parseFloat(e.target.value));\n                        }} value={roomLength} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"floor-area-input\" className=\"input-title\">Floor Area</label>\n                        <input className=\"user-input\" onChange={(e) => {\n                            setFloorArea(parseFloat(e.target.value));\n                            props.floorAreaEntered(parseFloat(e.target.value));\n                        }} value={floorArea} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"ceiling-height-input\" className=\"input-title\">Ceiling Height</label>\n                        <input id=\"ceiling-height-input\" className=\"user-input\" onChange={(e) => { \n                            setCeilingHeight(e.target.value);\n                            props.ceilingHeightEntered(parseFloat(e.target.value));\n                            }} value={ceilingHeight} />\n                    </div>\n                </div>\n                <p id=\"roomdim-help-text\" className=\"help-text\">If you don’t know your room’s length or width. Please enter your room’s overall floor area specified in building information. </p>\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/ventilation_clipart.f1764192.png\";","import './Calculator.css';\nimport VentilationImg from \"../../images/ventilation_clipart.png\";\n\nexport function Ventilation(props) {\n    return (\n        <div id=\"ventilation-wrapper\">\n            <div id=\"ventilation-left-box\">\n                <div className=\"input-wrapper\" id=\"ventilation-input-wrapper\">\n                    <label htmlFor=\"ventilation-selection\" className=\"input-title\">Ventilation</label>\n                    <select id=\"ventilation-selection\" className=\"user-input\" onChange={(e) => props.updateOutdoorVentilation(e.target.value)} value={props.type}>\n                        <option value=\"Poor\">Poor</option>\n                        <option value=\"Typical\">Typical</option>\n                        <option value=\"Good\">Good</option>\n                        <option value=\"Enhanced\">Enhanced</option>\n                    </select>\n                </div>\n                <p id=\"ventilation-text\"><span id=\"ventilation-text-title\">{props.type}:</span><br /> Select this if your environment has poor ventilation or you're not sure (for reference, a typical U.S. home is 0.5 ACH)</p>\n            </div>\n            <img src={VentilationImg} alt=\"Ventilation Clip Art\" id=\"img-ventilation\"/>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/cadr_clipart.bd6a9c1e.png\";","import \"./Calculator.css\";\nimport { useState } from \"react\";\nimport CadrImg from '../../images/cadr_clipart.png'\n\nexport function CADR(props) {\n\n    const [cadr, setCadr] = useState(props.roomInfo.cadr === 0 ? \"\" : props.roomInfo.cadr);\n\n    function checkValue(value) {\n        if (value !== \"I'm not sure\") {\n            // Should get the model's CADR here and pass it through cadr entered (200 just a default value for now)\n            props.cadrEntered(200);\n        }\n    }\n    \n    return (\n        <div id=\"cadr-wrapper\">\n            <img src={CadrImg} alt=\"Clean Air Delivery Rate Clipart\" id=\"img-cadr\" />\n            <div className=\"input-wrapper\">\n                <p className=\"input-title\">Air Cleaner Model Name</p>\n                <select className=\"user-input\" onChange={(e) => checkValue(e.target.value)}>\n                    <option></option>\n                    <option value=\"Levoit Vital 100 True HEPA Purifier\">Levoit Vital 100 True HEPA Purifier</option>\n                    <option value=\"Whirlpool Vital 100 True HEPA Purifier\">Whirlpool Vital 100 True HEPA Purifier</option>\n                    <option value=\"Conway Vital 100 True HEPA Purifier\">Conway Vital 100 True HEPA Purifier</option>\n                    <option value=\"I'm not sure\">I'm not sure</option>\n                </select>\n                <p className=\"input-title\">CADR of air cleaner</p>\n                <input className=\"user-input\" onChange={(e) => {\n                    setCadr(e.target.value);\n                    props.cadrEntered(parseInt(e.target.value));}} value={cadr} />\n            </div>\n            <p className=\"help-text\" id=\"cadr-help-text\">If you are unsure of your cleaner’s model name, then input the CADR value of your air cleaner. It is commonly listed at the bottom of the air cleaner on the specifications sticker.</p>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/density_clipart.28196e09.png\";","import './Calculator.css';\nimport { useState } from 'react';\nimport densityClipArt from '../../images/density_clipart.png'\nimport React from \"react\"\n\nexport function Density(props) {\n\n    const [occupancyText, setOccupancyText] = useState(\"\");\n    const [roomType, _setRoomType] = useState(props.roomInfo.roomType === \"\" ? \"\" : props.roomInfo.roomType);\n    const [usableSpace, _setUsableSpace] = useState(props.roomInfo.usableSpace === 0 ? 0 : props.roomInfo.usableSpace);\n    const [maxOccupancy, _setMaxOccupancy] = useState(props.roomInfo.maxOccupancy === 0 ? 0 : props.roomInfo.maxOccupancy);\n\n    const roomTypeRef = React.useRef(roomType);\n    const setRoomType = data => {\n      roomTypeRef.current = data;\n      _setRoomType(data);\n    };\n\n    const usableSpaceRef = React.useRef(usableSpace);\n    const setUsableSpace = data => {\n        usableSpaceRef.current = data;\n        _setUsableSpace(data);\n    };\n    \n    const maxOccupancyRef = React.useRef(maxOccupancy);\n    const setMaxOccupancy = data => {\n        maxOccupancyRef.current = data;\n        _setMaxOccupancy(data);\n    };\n    const OCCUPANCYLIMIT = .5;\n\n    const roomTypeToPersonUsableSpace = {\n        \"eating-drinking\" : 40,\n        \"gym\" : 50,\n        \"library\" : 50,\n        \"common-area\" : 40\n    }\n\n    function getOccupancyNumber(roomInfo) {\n        console.log(maxOccupancyRef.current + \" \" + roomTypeRef.current + \" \" + usableSpaceRef.current)\n        let occupancyText = \"\";\n        if (roomTypeRef.current === \"\" || usableSpaceRef.current === 0 || roomInfo.roomWidth === 0 || roomInfo.roomLength === 0) {\n            occupancyText = \"\";\n            document.getElementById(\"density-recommendation\").style.visibility = \"hidden\";\n        } else {\n            let roomUsableSpace = (roomInfo.roomLength * roomInfo.roomWidth) * (usableSpaceRef.current / 100);\n            let method1Calc = roomUsableSpace / roomTypeToPersonUsableSpace[roomTypeRef.current];\n            let method2Calc = 0.0;\n            if (isNaN(maxOccupancyRef.current)|| maxOccupancyRef.current === 0) {\n                occupancyText = method1Calc;\n            } else {\n                method2Calc = maxOccupancyRef.current * OCCUPANCYLIMIT; \n                occupancyText = method1Calc < method2Calc ? method1Calc : method2Calc;\n            }\n            document.getElementById(\"density-recommendation\").style.visibility = \"visible\";\n        }\n        return Math.floor(occupancyText);\n    }\n\n    return (\n        <div id=\"density-wrapper\">\n            <div id=\"density-left-container\">\n                <div className=\"input-wrapper\">\n                    <label htmlFor=\"roomtype-selection\" className=\"input-title\">RoomType</label>\n                    <select id=\"roomtype-selection\" className=\"user-input\" onChange={(e) => { \n                        setRoomType(e.target.value)\n                        props.updateRoomType(e.target.value);\n                        setOccupancyText(getOccupancyNumber(props.roomInfo));\n                    }}>\n                        <option disabled selected value=\"\"> -- select an option -- </option>\n                        <option value=\"eating-drinking\">{'Eating & Drinking Area'}</option>\n                        <option value=\"gym\">{'Gyms & Fitness Center'}</option>\n                        <option value=\"common-area\">{'Lobby, Hallway, Common Area'}</option>\n                        <option value=\"library\">{'Library'}</option>\n                    </select>\n                    <label htmlFor=\"space-selection\" className=\"input-title\" id=\"density-bottom-title\">Usable Space</label>\n                    <select id=\"roomtype-selection\" className=\"user-input\" onChange={(e) => {\n                        // setUsableSpace(() => parseFloat(e.target.value));\n                        setUsableSpace(parseFloat(e.target.value));\n                        props.updateUsableSpace(parseFloat(e.target.value));\n                        setOccupancyText(getOccupancyNumber(props.roomInfo));\n                    }}>\n                        <option disabled selected value=\"\"> -- select an option -- </option>\n                        <option value=\"10\">10%</option>\n                        <option value=\"20\">20%</option>\n                        <option value=\"30\">30%</option>\n                        <option value=\"40\">40%</option>\n                        <option value=\"50\">50%</option>\n                        <option value=\"60\">60%</option>\n                        <option value=\"70\">70%</option>\n                        <option value=\"80\">80%</option>\n                        <option value=\"90\">90%</option>\n                        <option value=\"100\">100%</option>\n                    </select>\n                    <label htmlFor=\"maximum-occupancy\" className=\"input-title\" id=\"density-middle-title\">Maximum Occupancy</label>\n                    <input className=\"user-input\" onChange={(e) => {\n                        setMaxOccupancy(parseFloat(e.target.value))\n                        props.updateOccupancy(parseFloat(e.target.value));\n                        setOccupancyText(getOccupancyNumber(props.roomInfo));\n                    }} />\n                </div>\n                <p id=\"density-recommendation\"><span className=\"density-bold\">Occupancy Recommendation: </span>Based on your room type and usable space, the recommended occupancy of your room is <span className=\"density-bold\">{occupancyText + \" persons\"}</span></p>\n            </div>\n            <img src={densityClipArt} id=\"img-density\" alt=\"density clip art\"/>\n            <p id=\"density-help-text\" className=\"help-text\">Occupant density determines the optimal amount of people that should be in your room for clean air</p>\n        </div>\n    )\n}","import \"./Calculator.css\"\nimport {RoomDim} from \"./RoomDim.js\"\nimport {Ventilation} from \"./Ventilation.js\"\nimport {CADR} from \"./CADR.js\"\nimport {Density} from \"./Density.js\"\n\nexport function Calculator(props) {\n    function getTitle() {\n        document.body.style.background = \"linear-gradient(180deg, rgba(234, 95, 20, 0.25) 0%, rgba(234, 95, 20, 0.25) 41.15%, rgba(234, 95, 20, 0.25) 76.56%, rgba(226, 167, 0, 0.25) 100%)\";\n        return props.calculatorType === \"find\" ? \"Find Air Cleaner\" : \"Test Air Cleaner Efficiency\";\n    }\n\n    function showResults() {\n        if (inputIsValid()) {\n            props.onShowResult(props.calculatorType);\n        } \n        window.scrollTo(0, 0);\n    }\n\n    function inputIsValid() {\n        if (props.calculatorType === \"find\" && (props.roomInfo.roomWidth === 0 || props.roomInfo.roomLength === 0 || props.roomInfo.ceilingHeight === 0)) {\n            console.log(\"Please fill out all fields to continue\");\n            return false;\n        } else if (props.calculatorType === \"test\" && (props.roomInfo.roomWidth === 0 || props.roomInfo.roomLength === 0 || props.roomInfo.ceilingHeight === 0 || props.roomInfo.cadr === 0)) {\n            console.log(\"Please fill out all fields to continue\");\n            return false;\n        } else {\n            props.floorAreaEntered(props.roomInfo.roomWidth * props.roomInfo.roomLength);\n            return true;\n        }\n    }\n\n    return (\n        <div id=\"calculator-wrapper\">\n            <h2 id=\"calculator-title\">{getTitle()}</h2>   \n            <div className=\"step-wrapper\"> \n                <h3 className=\"step-title\">Step 1: Room Dimension</h3>\n                <RoomDim unitSelectionMade={props.unitSelectionMade} roomWidthEntered={props.roomWidthEntered} roomLengthEntered={props.roomLengthEntered} \n                ceilingHeightEntered={props.ceilingHeightEntered} floorAreaEntered={props.floorAreaEntered} roomInfo={props.roomInfo} />\n            </div>\n            <div className=\"step-wrapper\">\n                <h3 className=\"step-title\">Step 2: Ventilation Rating</h3>\n                <Ventilation updateOutdoorVentilation={props.updateOutdoorVentilation} type={props.roomInfo.outdoorVentilation}/>\n            </div>\n            {props.calculatorType === \"test\" && <div className=\"step-wrapper\">\n                <h3 className=\"step-title\">Step 3: Clean Air Delivery Rate (CADR)</h3>\n                <CADR cadrEntered={props.cadrEntered} roomInfo={props.roomInfo} />\n            </div>}\n\n            <div className=\"step-wrapper\">\n                <h3 className=\"step-title\">Step 4: Occupant Density</h3>\n                <Density updateRoomType={props.updateRoomType} updateUsableSpace={props.updateUsableSpace} updateOccupancy={props.updateOccupancy} roomInfo={props.roomInfo}/>\n            </div>\n            <div id=\"button-wrapper\">\n                <button id=\"results-btn\" onClick={() => showResults()}>VIEW RESULTS</button>\n            </div>\n        </div>\n    )\n}","import './RoomSizeRec.css'\nimport GaugeChart from 'react-gauge-chart'\n\nexport function RoomSizeRec(props) {\n    const ventilationToACH = {\n        'Poor' : 1,\n        'Typical' : 1.5,\n        'Good' : 3,\n        'Enhanced' : 4\n    }\n\n    function achToMessage(ach) {\n        if (ach < 3) {\n            return \"VERY LOW\";\n        } else if (ach < 4) {\n            return \"BARE MINIMUM\";\n        } else if (ach < 5) {\n            return \"OKAY\";\n        } else if (ach < 6) {\n            return \"GOOD\";\n        } else {\n            return \"IDEAL\";\n        }\n    }\n\n    function getACH() {\n        if (props.roomInfo.units === \"feet\") {\n            return (Math.round((props.roomInfo.cadr * 60 / ((props.roomInfo.roomWidth * props.roomInfo.roomLength) * props.roomInfo.ceilingHeight)) * 10) / 10) + ventilationToACH[props.roomInfo.outdoorVentilation]\n        } else {\n            return (Math.round(((props.roomInfo.cadr / .58) / ((props.roomInfo.roomWidth * props.roomInfo.roomLength) * props.roomInfo.ceilingHeight)) * 10) / 10) + ventilationToACH[props.roomInfo.outdoorVentilation]\n        }\n    }\n\n    function getPercent() {\n        let ach = getACH();\n        if (ach <= 3) {\n            return ach / 15;\n        } else if (ach <= 4) {\n            return ach / 10.26;\n        } else if (ach <= 5) {\n            return ach / 8.62;\n        } else if (ach <= 6) {\n            return ach / 7.79;\n        } else {\n            return .77 + (.01 * ach)\n        }\n    }\n\n    function calculateRoomSize() {\n        let totalCFM = 0;\n        if (props.roomInfo.units === \"feet\") {\n            totalCFM = ((ventilationToACH[props.roomInfo.outdoorVentilation] * ((props.roomInfo.roomWidth * props.roomInfo.roomLength) * props.roomInfo.ceilingHeight)) / 60) + parseFloat(props.roomInfo.cadr);\n            console.log(totalCFM)\n            return Math.round((totalCFM * 60) / (5 * props.roomInfo.ceilingHeight));\n        } else {\n            totalCFM = ((ventilationToACH[props.roomInfo.outdoorVentilation] * props.roomInfo.floorArea * props.roomInfo.ceilingHeight * 35.3147) / 60) + parseFloat(props.roomInfo.cadr);\n            return Math.round(((totalCFM*60) / 35.315) / (5 * props.roomInfo.ceilingHeight));\n        }\n    }\n\n    return (\n        <div id=\"roomsizerec-container\">\n            <div id=\"roomsizerec-header\" unselectable=\"on\">\n                <button id='btn-back' onClick={() => {\n                    props.backToCalculator();\n                }}>{'< Go Back'}</button>\n                <p id=\"roomsizerec-title\">ACH Efficiency Report</p>\n            </div>\n            <div id=\"roomsizerec-content\">\n                <div id=\"roomsizerec-gauge\">\n                    <h3>Is your room meeting the recommended guidelines?</h3>\n                    <GaugeChart id=\"gauge-chart1\" \n                    nrOfLevels={5}\n                    colors={[\"#FF0D0D\", \"#FF8E15\", \"#FAB733\", \"#ACB334\", \"#69B34C\"]}\n                    arcPadding={0.05}\n                    arcsLength={[0.20, 0.19, .19, .19, 0.20]}\n                    animate={true}\n                    percent={getPercent()}\n                    formatTextValue={value => getACH()}\n                    />\n                    <p id=\"gauge-footer\">Air Changes Per Hour</p>\n                    <div id=\"gauge-result-message\">\n                        <p id=\"result-message\">{achToMessage(getACH())}</p>\n                    </div>\n                </div>\n                <div id=\"roomsizerec-details\">\n                    <div className=\"details-module\">\n                        <p className=\"details-top\" id=\"superscript-feet\">{calculateRoomSize()} ft <span id=\"superscript-number\">2</span></p>\n                        <p className=\"details-bottom\">Recommended Room Area</p>\n                    </div>\n                    <div className=\"details-module\">\n                        <p className=\"details-top\">{props.roomInfo.outdoorVentilation.toUpperCase()}</p>\n                        <p className=\"details-bottom\">Ventilation Rating</p>\n                    </div>\n                    <div className=\"details-module\">\n                        <p className=\"details-top\">EPSOM-6429</p>\n                        <p className=\"details-bottom\">Air Cleaner Model Name</p>\n                    </div>\n                    <div className=\"details-module\">\n                        <p className=\"details-top\">{props.roomInfo.cadr}</p>\n                        <p className=\"details-bottom\">Clean Air Delivery Rate</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import './SortKeyChoice.css';\nimport './AirCleanerRecommendations.css';\n\nexport function SortKeyChoice(props) {\n    return (\n        <div id='sort-key-choice-container'>\n            <div id='sort-key-choice'>\n                <label htmlFor='sort-key-choice-dropdown'>Sort By:</label>\n                <select id='sort-key-choice-dropdown' onChange={(e) => props.updateSortKey(e.target.value)}>\n                    <option value='price'>Price</option>\n                    <option value='noise'>Noise</option>\n                    <option value='ach'>ACH (Air Changes per Hour)</option>\n                </select>\n            </div>\n        </div>\n    )\n}","import { useRef, useState } from 'react';\nimport './FilterOptions.css';\n\nexport function FilterOptions(props) {\n\n    const [filterOptions, setFilterOptions] = useState({});\n    const maxPriceInput = useRef(null);\n    const maxNoiseInput = useRef(null);\n    const maxPowerInput = useRef(null);\n\n    function clearFilterOptions() {\n        maxPriceInput.current.value = null;\n        maxNoiseInput.current.value = null;\n        maxPowerInput.current.value = null;\n        let newFilterOptions = {\n            maxPrice: -1,\n            maxNoise: -1,\n            maxPower: -1,\n        };\n        props.setFilterOptions(newFilterOptions);\n    }\n\n    function updateFilterOptions() {\n        const newFilterOptions = {\n            maxPrice: maxPriceInput.current.value !== '' ? maxPriceInput.current.value : -1,\n            maxNoise: maxNoiseInput.current.value !== '' ? maxNoiseInput.current.value : -1,\n            maxPower: maxPowerInput.current.value !== '' ? maxPowerInput.current.value : -1\n        };\n        setFilterOptions(newFilterOptions);\n    }\n\n    return (\n        <div id='filter-options'>\n            <div id='filter-options-title-container'>\n                <p id='filter-options-title'>Filter by:</p>\n                <button id='filter-options-clear-all-button' data-testid='clear-filter-options-button' onClick={clearFilterOptions}>clear all</button>\n            </div>\n\n            <div className='filter-option-container'>\n                <p className='filter-option-title'>Max Price (U.S dollars)</p>                \n                <div className='filter-option'>\n                    <div className='filter-option-label-and-input'>\n                        <label htmlFor='price-input' className='filter-option-unit-dollar'>$</label>\n                        <input id='price-input' className='filter-option-input' onChange={() => updateFilterOptions()} ref={maxPriceInput} />\n                    </div>\n                    <button data-testid='max-price-filter-submit-button' className='submit-filter-options-button' onClick={() => {props.setFilterOptions(filterOptions)}}>Submit</button>\n                </div>\n            </div>\n            <div className='filter-option-container'>\n                <p className='filter-option-title'>Max Noise (decibels)</p>\n                <div className='filter-option'>\n                    <div className='filter-option-label-and-input'>\n                        <input id='noise-input' className='filter-option-input' onChange={() => updateFilterOptions()} ref={maxNoiseInput} />\n                        <label htmlFor='noise-input' className='filter-option-unit-other'>dB</label>\n                    </div>\n                    <button data-testid='max-noise-filter-submit-button' className='submit-filter-options-button' onClick={() => {props.setFilterOptions(filterOptions)}}>Submit</button>\n                </div>\n            </div>\n            <div id='last-filter-option-container' className='filter-option-container'>\n                <p className='filter-option-title'>Max Power Usage (Watts)</p>\n                <div className='filter-option'>\n                    <div className='filter-option-label-and-input'>\n                        <input id='power-input' className='filter-option-input' onChange={() => updateFilterOptions()} ref={maxPowerInput} />\n                        <label htmlFor='power-input' className='filter-option-unit-other'>W</label>\n                    </div>\n                    <button data-testid='max-power-filter-submit-button' className='submit-filter-options-button' onClick={() => {props.setFilterOptions(filterOptions)}}>Submit</button>\n                </div>\n            </div>\n        </div>\n    );\n}","import './AirCleanerListItem.css';\n\nexport function AirCleanerListItem(props) {\n\n    return (\n        <div className='air-cleaner-list-item'>\n            <div className='air-cleaner-image-container'>\n                <img className='air-cleaner-image' src={props.airCleaner.imageLink} alt={props.airCleaner.name}/>\n            </div>\n            <div className='air-cleaner-high-level-details'>\n                <p className='air-cleaner-name'>{props.airCleaner.name}</p>\n                <p data-testid='air-cleaner-price'><strong>Price:</strong> ${props.airCleaner.price}</p>\n                <p data-testid='air-cleaner-ach'><strong> Estimated air changes per hour for your space:</strong>  {props.airCleaner.ach}</p>\n                <p data-testid='air-cleaner-noise'><strong> Noise Level:</strong>  {props.airCleaner.noise < 0 ? 'Not available' : props.airCleaner.noise + ' dB'}</p>\n                <button className='air-cleaner-details-button' onClick={() => {props.detailsClick(props.airCleaner)}}>Details</button>\n            </div>\n        </div>\n    );\n}","import './AirCleanerList.css';\nimport './AirCleanerRecommendations.css';\nimport { AirCleanerListItem } from './AirCleanerListItem';\nimport {useEffect, useState} from 'react';\n\nexport function AirCleanerList(props) {\n    const [recommendedAirCleaners, setRecommendedAirCleaners] = useState([]);\n\n    const airCleanerComponents = recommendedAirCleaners.map((item) => \n    <AirCleanerListItem key={item.name} airCleaner={item} detailsClick={props.detailsClick} />\n    );\n\n    useEffect(() => {\n        function calculate() {\n            let outdoorVentilation = 1;\n            if (props.roomInfo.outdoorVentilation === 'Typical') {\n                outdoorVentilation = 1.5\n            } else if (props.roomInfo.outdoorVentilation === 'Good') {\n                outdoorVentilation = 3;\n            } else if (props.roomInfo.outdoorVentilation === 'Enhanced') {\n                outdoorVentilation = 4;\n            }\n            \n            let airCleaners = props.airCleaners;\n            airCleaners.forEach((airCleaner) => {\n                if (props.roomInfo.units === 'feet') {\n                    airCleaner.ach = Math.round((airCleaner.cadr * 60) / (props.roomInfo.floorArea * props.roomInfo.ceilingHeight) * 100) / 100.0 + outdoorVentilation;\n                } else {\n                    airCleaner.ach = Math.round((airCleaner.cadr / 0.58) / (props.roomInfo.floorArea * props.roomInfo.ceilingHeight) * 100) / 100.0 + outdoorVentilation;\n                }\n            });\n\n            let filteredUnsortedAirCleaners = [...airCleaners].filter((airCleaner) => {\n                if (airCleaner.ach < 4) { // \"good\" ACH or better\n                    return false;\n                }\n\n                if ((props.filterOptions.maxPrice > -1) && (props.filterOptions.maxPrice < airCleaner.price)) {\n                    return false;\n                }\n                if ((props.filterOptions.maxNoise > -1) && ((props.filterOptions.maxNoise < airCleaner.noise) || airCleaner.noise === -1)) {\n                    return false;\n                }\n                if ((props.filterOptions.maxPower > -1) && (props.filterOptions.maxPower < airCleaner.power)) {\n                    return false;\n                }\n\n                return true;\n            });\n        \n            let sortedAirCleaners = filteredUnsortedAirCleaners.sort((a, b) => {\n                if (a[props.sortKey] === -1 && b[props.sortKey] !== -1) {\n                    return 1;\n                }\n                if (b[props.sortKey] === -1 && a[props.sortKey] !== -1) {\n                    return -1;\n                }\n                \n                if (props.sortKey === 'ach') {\n                    return b[props.sortKey] - a[props.sortKey];\n                }\n                return a[props.sortKey] - b[props.sortKey];\n            });\n            \n            setRecommendedAirCleaners(sortedAirCleaners);\n        }\n        calculate();\n        \n    }, [props]);\n\n    return (\n        <div id='air-cleaner-list'>\n            {airCleanerComponents.length > 0 ? airCleanerComponents :\n                <div id='no-air-cleaners-found-message-container'>\n                    <p>Sorry, but there were no portable air cleaners found.</p>\n                </div>\n            }\n        </div>\n    );\n}","import './AirCleanerDetails.css';\n\nexport function AirCleanerDetails(props) {\n\n    function sizeWithInchMarks(airCleanerSize) {\n        const firstInchMarkInsertionLocation = airCleanerSize.indexOf('x') - 1;\n        const secondInchMarkInsertionLocation = airCleanerSize.lastIndexOf('x') - 1;\n        return airCleanerSize.slice(0, firstInchMarkInsertionLocation) + '\"' + \n               airCleanerSize.slice(firstInchMarkInsertionLocation, secondInchMarkInsertionLocation) + '\"' +\n               airCleanerSize.slice(secondInchMarkInsertionLocation) + '\"';   \n    }\n\n    return(\n        <div id='air-cleaner-details-container'>\n            <div id='air-cleaner-details'>\n                <div id='air-cleaner-details-header'>\n                    <h3>{props.airCleaner.name}</h3>\n                    <button id='close-air-cleaner-details-button' onClick={() => {console.log(props.airCleaner); props.closeDetailsClick()}}>Close</button>\n                </div>\n                <div id='air-cleaner-details-body'>\n                    <img className='air-cleaner-details-image' src={props.airCleaner.imageLink} alt={props.airCleaner.name} />\n                    <div>\n                    <p><strong>Link to buy:</strong> <a href={props.airCleaner.link}>Here</a></p>\n                    <p><strong> Estimated air changes per hour for your space:</strong>  {props.airCleaner.ach}</p>\n                    <p><strong>Price:</strong> ${props.airCleaner.price}</p>\n                    <p><strong>Noise:</strong> {props.airCleaner.noise === -1 ? 'Not available' : props.airCleaner.noise + ' dB'}</p>\n                    <p><strong>Power Requirement:</strong> {props.airCleaner.power === -1 ? 'Not available' : props.airCleaner.power + ' W'}</p>\n                    <p><strong>Clean Air Delivery Rate (CADR):</strong> {props.airCleaner.cadr + ' m^3/min'}</p>\n                    <p><strong>Size:</strong> {props.airCleaner.size === '' ? 'Not available' : sizeWithInchMarks(props.airCleaner.size)}</p>\n                    <p><strong>Maximum Room Size:</strong> {props.airCleaner.maxRoomSize === -1 ? 'Not available' : props.airCleaner.maxRoomSize + ' square feet'}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/various_portable_air_cleaners.d351f1a5.png\";","import {useState} from 'react';\nimport {SortKeyChoice} from './SortKeyChoice.js';\nimport {FilterOptions} from './FilterOptions.js';\nimport {AirCleanerList} from './AirCleanerList.js';\nimport {AirCleanerDetails} from './AirCleanerDetails.js';\nimport './AirCleanerRecommendations.css';\nimport VariousPortableAirCleaners from '../../images/various_portable_air_cleaners.png';\n\n\nexport function AirCleanerRecommendations(props) {\n    const filterOptionsInit = {\n        maxPrice : -1,\n        maxNoise : -1,\n        maxWidth : -1,\n        maxLength : -1,\n        maxHeight : -1,\n        maxPower : -1,\n    }\n\n    const [sortKey, setSortKey] = useState('price');\n    const [filterOptions, setFilterOptions] = useState(filterOptionsInit);\n    const [selectedAirCleaner, setSelectedAirCleaner] = useState(null);\n\n    function detailsClick(airCleaner) {\n        setSelectedAirCleaner(airCleaner);\n    }\n\n    function closeDetailsClick() {\n        setSelectedAirCleaner(null);\n    }\n\n    return (\n        <div id='air-cleaner-recommendations-container'>\n            {selectedAirCleaner === null &&\n            <div>\n                <button id='back-button' onClick={() => {props.backToCalculator()}}>{'< Go Back'}</button>\n                <div id='air-cleaner-recommendations'>\n                    <FilterOptions filterOptions={filterOptions} setFilterOptions={setFilterOptions} />\n                    <div id='air-cleaner-recommendations-page-center-container'>\n                        <div id='air-cleaner-recommendations-page-center'>\n                            <div id='various-air-cleaners-image-container'>\n                            <img id='various-air-cleaners-image' src={VariousPortableAirCleaners} alt='Various portable air cleaners' />\n                            </div>\n                            <h2 id='air-cleaner-recommendations-title'>Recommended Portable Air Cleaners</h2>\n                            <SortKeyChoice updateSortKey={setSortKey} />\n                            <AirCleanerList roomInfo={props.roomInfo} sortKey={sortKey} filterOptions={filterOptions} detailsClick={detailsClick} airCleaners={props.airCleaners} />\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>}\n            { selectedAirCleaner !== null && <AirCleanerDetails airCleaner={selectedAirCleaner} closeDetailsClick={closeDetailsClick} /> }\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/aircleaner_animated.3e5eb9b7.png\";","import \"./LandingPage.css\";\nimport AirCleanerImg from \"../../images/aircleaner_animated.png\";\nimport { useTranslation } from \"react-i18next\";\n\nexport function LandingPage(props) {\n    const {t} = useTranslation();\n\n    return (\n        <div id=\"body-container\">\n            <div id=\"text-container\">\n                <h1 id=\"title\">{t('Title')}</h1>\n                <p id=\"text-calculator-description\">Click a button below to calculate which portable air cleaner is best suited \n                for your business to help keep employees and customers safe or test your own portable air cleaner to find out whether \n                it’s effectively ventilating your business.</p>\n                <div id=\"buttons-container\">\n                    <button className=\"subheader--btn\" id=\"subheader--btn-find\" onClick={() => props.setCalculatorType(\"find\")}>{t(\"FIND AIR CLEANER\")}</button>\n                    <button className=\"subheader--btn\" id=\"subheader--btn-test\" onClick={() => props.setCalculatorType(\"test\")}>{t(\"TEST AIR CLEANER\")}</button>\n                </div>\n            </div>\n                <img id=\"img-aircleaner\"src={AirCleanerImg} alt=\"Portable air cleaner drawing\"/>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/air_cleaner_list.69f7c418.csv\";","import { useState, useEffect } from 'react';\nimport { Calculator } from './Calculator/Calculator.js';\nimport {RoomSizeRec} from './RoomSizeRec/RoomSizeRec.js';\nimport {AirCleanerRecommendations} from './AirCleanerRecommendations/AirCleanerRecommendations.js';\nimport { LandingPage } from './LandingPage/LandingPage.js';\n\nimport data from '../air_cleaner_list.csv';\nimport * as d3 from 'd3';\n\nexport function Home(props) {\n    let roomInfoInit = {\n        roomWidth : 0,\n        roomLength: 0,\n        floorArea: 0,\n        ceilingHeight : 0,\n        units : 'feet',\n        outdoorVentilation : 'Poor',\n        cadr : 0,\n        roomType : 'Eating & Drinking',\n        usableSpace : 0,\n        maxOccupancy : 0\n    }\n\n    const [roomInfo, setRoomInfo] = useState(roomInfoInit);\n    const [calculatorType, setCalculatorType] = useState(null);\n    const [resultType, setResultType] = useState(null);\n    // props.airCleaners will always be undefined in production, but this allows us to pass in specific air cleaners for testing.\n    const [airCleaners, setAirCleaners] = useState(props.airCleaners === undefined ? null : props.airCleaners);\n\n    useEffect(() => {\n        async function getAirCleaners() {\n            const result = await d3.csv(data, (d) => {\n                return {\n                    name: d['Name'],\n                    cadr: +d['CADR'],\n                    price: d['Price (USD)'] === '' ? -1 : +d['Price (USD)'],\n                    noise: d['Noise Rating (db)'] === '' ? -1 : +d['Noise Rating (db)'],\n                    power: d['Power (W)'] === '' ? -1 : +d['Power (W)'],\n                    size: d['Size (in)'],\n                    maxRoomSize: d['Room Size (sq ft)'] === '' ? -1 : +d['Room Size (sq ft)'],\n                    link: d['Link'],\n                    imageLink: d['Image Link']\n                }\n            });\n            setAirCleaners(result);\n        }\n        if (airCleaners === null) {\n            getAirCleaners();\n        }\n    });\n\n    function showResults(type) {\n        setResultType(type);\n        setCalculatorType('hidden_' + calculatorType);\n    }\n    \n    function unitSelectionMade(unitType) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : unitType,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr,\n            roomType : roomInfo.roomType,\n            usableSpace : roomInfo.usableSpace,\n            maxOccupancy : roomInfo.maxOccupancy\n        }\n        setRoomInfo(newRoomInfo)\n    }\n\n    function roomWidthEntered(width) {\n        let newRoomInfo = {\n            roomWidth : width,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr,\n            roomType : roomInfo.roomType,\n            usableSpace : roomInfo.usableSpace,\n            maxOccupancy : roomInfo.maxOccupancy\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function roomLengthEntered(length) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : length,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr,\n            roomType : roomInfo.roomType,\n            usableSpace : roomInfo.usableSpace,\n            maxOccupancy : roomInfo.maxOccupancy\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function floorAreaEntered(area) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : area,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr,\n            roomType : roomInfo.roomType,\n            usableSpace : roomInfo.usableSpace,\n            maxOccupancy : roomInfo.maxOccupancy\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function ceilingHeightEntered(height) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : height,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr,\n            roomType : roomInfo.roomType,\n            usableSpace : roomInfo.usableSpace,\n            maxOccupancy : roomInfo.maxOccupancy\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function cadrEntered(cadr) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : cadr,\n            roomType : roomInfo.roomType,\n            usableSpace : roomInfo.usableSpace,\n            maxOccupancy : roomInfo.maxOccupancy\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function updateOutdoorVentilation(ventilationLevel) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : ventilationLevel,\n            cadr : roomInfo.cadr,\n            roomType : roomInfo.roomType,\n            usableSpace : roomInfo.usableSpace,\n            maxOccupancy : roomInfo.maxOccupancy\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function updateRoomType(roomType) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr,\n            roomType : roomType,\n            usableSpace : roomInfo.usableSpace,\n            maxOccupancy : roomInfo.maxOccupancy\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function updateUsableSpace(usableSpace) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr,\n            roomType : roomInfo.roomType,\n            usableSpace : usableSpace,\n            maxOccupancy : roomInfo.maxOccupancy\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function updateOccupancy(maxOccupancy) {\n        let newRoomInfo = {\n            roomWidth : roomInfo.roomWidth,\n            roomLength : roomInfo.roomLength,\n            floorArea : roomInfo.floorArea,\n            ceilingHeight : roomInfo.ceilingHeight,\n            units : roomInfo.units,\n            outdoorVentilation : roomInfo.outdoorVentilation,\n            cadr : roomInfo.cadr,\n            roomType : roomInfo.roomType,\n            usableSpace : roomInfo.usableSpace,\n            maxOccupancy : maxOccupancy\n        }\n        setRoomInfo(newRoomInfo);\n    }\n\n    function backToCalculator() {\n        setResultType(null);\n        setCalculatorType(calculatorType.substring(7));\n    }\n\n    return (\n        <div>\n            {calculatorType === null && resultType === null && <LandingPage setCalculatorType={setCalculatorType}/>}\n            {(calculatorType === 'find' || calculatorType === 'test') && \n                <Calculator calculatorType={calculatorType} roomInfo={roomInfo} unitSelectionMade={unitSelectionMade}\n                roomWidthEntered={roomWidthEntered} roomLengthEntered={roomLengthEntered} floorAreaEntered={floorAreaEntered} ceilingHeightEntered={ceilingHeightEntered}\n                 cadrEntered={cadrEntered} onShowResult={showResults} updateOutdoorVentilation={updateOutdoorVentilation} updateRoomType={updateRoomType} \n                 updateUsableSpace={updateUsableSpace} updateOccupancy={updateOccupancy} />}\n            {resultType === 'find' && airCleaners !== null && <AirCleanerRecommendations roomInfo={roomInfo} backToCalculator={backToCalculator} airCleaners={airCleaners}/>}\n            {resultType === 'test' && <RoomSizeRec roomInfo={roomInfo} backToCalculator={backToCalculator} />}\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/coral_logo.52aed696.png\";","export default __webpack_public_path__ + \"static/media/about_product.ed72463d.png\";","export default __webpack_public_path__ + \"static/media/commerce_about_logo.1496b165.png\";","import teamLogo from '../images/coral_logo.png'\nimport aboutProduct from '../images/about_product.png'\nimport commerceLogo from '../images/commerce_about_logo.png'\nimport './About.css'\n\nexport function About() {\n    return (\n        <div>\n            <div className=\"about-submodule-container\">\n                <div className=\"about-text-container\" id=\"about-team-container\">\n                    <h2>About the Team</h2>\n                    <p>We are Informatics students at the University of Washington. We wanted to work on ths project because COVID-19 personally impacted us \n                        and many small businesses we know so we were motivated to help create a product that aims at reducing the spread of the virus. </p>\n                </div>\n                <img src={teamLogo} alt=\"Team Logo\" id=\"img-logo\"/>\n            </div>\n            <div className=\"about-submodule-container\">\n                {/* fix ALT Tag */}\n                <img src={aboutProduct} alt=\"\" id=\"img-product\" />\n                <div className=\"about-text-container\" id=\"about-product-container\">\n                    <h2>Why Our Product and Why You Should Care</h2>\n                    <p>Air quality is absolutely paramount in keeping yourself and your employees safe, especially for small businesses who function mostly indoor. \n                        Because it’s hard to practice social distancing in a closed and pack environment, air cleaner is one of the best ways of keeping everyone in your business safe. </p>\n                </div>\n            </div>\n            <div className=\"about-submodule-container\">\n                <div className=\"about-text-container\" id=\"about-sponsor-container\">\n                    <h2>Our Sponsor</h2>\n                    <p>Sarah Lee from the Washington State Department of Commerce is our sponsor. We are working under the efforts of the Safe Start grant which funds projects helping \n                        small business keep running afer facing economic hardships during the COVID-19 pandemic. </p>\n                </div>\n                <img src={commerceLogo} alt=\"Commerce Logo\" id=\"img-commerce-logo\"/>\n            </div>\n            <div className=\"about-submodule-container\">\n                <div className=\"about-text-container\">\n                    <h2>Special Thanks</h2>\n                </div>\n                <img />\n            </div>\n        </div>\n    )\n}","import './AdditionalResources.css';\n\nexport function AdditionalResources() {\n    return (\n        <div id='additional-resources-container'>\n            <h1>Additional Resources</h1>\n            <h2>References</h2>\n        </div>\n    )\n}","import './Help.css';\n\nexport function Help() {\n    return (\n        <div id='help-content-container'>\n            <h2 className='help-subheading'>Demo Video</h2>\n            <p>space for demo video</p>\n            <h2>Disclaimer</h2>\n            <p>Wearing masks, social distancing, increasing airflow from outdoors with open doors and windows, and upgrading the filter\n                that you use in your ventilation system (if you have a ventilation system) <strong>are all more\n                important precautions to take than buying a portable air cleaner.</strong> Portable air cleaners are\n                only a small part of preventing COVID-19. You can read more about these precautions <a href='#'>here</a>.\n            </p>\n            <p>Using a portable air cleaner may decrease the likelihood of infection from COVID-19, but it does not\n                prevent it. We are not guaranteeing that any portable air cleaner we recommend will prevent\n                you or others in the space the air cleaner is located to not be infected with COVID-19. You can read\n                more about portable air cleaners <a href='#'>here</a>.\n            </p>\n            <h2 className='help-subheading'>Frequently Asked Questions (FAQs)</h2>\n            <strong><p>Where should I place my air cleaner?</p></strong>\n            <p>Portable air cleaners should usually be elevated about 3 feet off the ground (SOURCE?). They should be\n                placed in an area that will cover as much of the room as possible, which is usually the center of the\n                room. However, avoid placing the air cleaner so that the air released from it blows on people. The\n                model of your specific air cleaner may have more information.\n            </p>\n            <strong><p>How long does it take for a portable air cleaner to fully ventilate a room?</p></strong>\n            <p>calculation for this?\n            </p>\n            <strong><p>Where do I find my device's CADR rating?</p></strong>\n            <p>You can find your portable air cleaner's CADR rating on the product's website or the specification\n                section that comes with your portable air cleaner.\n            </p>\n            <strong><p>My air cleaner has CADR ratings for dust, smoke/tobacco smoke, and pollen. Which one should I use?</p></strong>\n            <p>Use the dust CADR rating.</p>\n            <strong><p>How do I estimate my room's ventilation rating?</p></strong>\n            <p>The room ventilation can be calculated by using a CO_2 monitor. You can use <a href=\"#\">this</a>\n            link to measure it. If you can't/don't want to do this, you can estimate based on any upgrades to\n            your ventilation system and how much fresh air you think is being circulated in the room.</p>\n            <h2>Terminologies</h2>\n        </div>\n    );\n}","import React from 'react';\nimport {Home} from './Home.js';\nimport {About} from './About.js';\nimport {AdditionalResources} from './AdditionalResources.js';\nimport {Help} from './Help.js';\nimport {Switch, Route} from 'react-router-dom';\n\nexport function Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/about' component={About} />\n                <Route path='/additional-resources' component={AdditionalResources} />\n                <Route path='/help' component={Help} />\n            </Switch>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/departmentOfCommerceLogo.c7979d81.png\";","import './Header.css';\nimport logo from '../../images/departmentOfCommerceLogo.png';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from \"react-router-dom\";\n\nexport function Header() {\n    const {t} = useTranslation();\n\n    function expandHamburgerMenu() {\n        if (document.querySelector('#tabs-container').style.display === '') {\n            document.querySelector('#tabs-container').style.display = 'flex';\n        } else {\n            document.querySelector('#tabs-container').style.display = '';\n        }\n    }\n\n    return (\n        <div id=\"header-container\">\n            <header>\n                <img id='wa-dept-of-commerce-logo' src={logo} alt='Washington State Department of Commerce Logo' />\n                <nav>\n                    <div id=\"tabs-container\">\n                        <Link to=\"/\" className=\"tab\">{t('Tabs.Home')}</Link>\n                        <span className=\"tab-divider\">|</span>\n                        <Link to=\"/about\" className=\"tab\">{t('Tabs.About')}</Link>\n                        <span className=\"tab-divider\">|</span>\n                        <Link to=\"/additional-resources\" className=\"tab\">{t('Tabs.Resources')}</Link>\n                        <span className=\"tab-divider\">|</span>\n                        <Link to=\"/help\" className=\"tab\">{t('Help')}</Link>\n                    </div>\n                    <div id='hamburger-menu' onClick={() => expandHamburgerMenu()}>\n                        <div className=\"hamburger-menu-line\"></div>\n                        <div className=\"hamburger-menu-line\"></div>\n                        <div className=\"hamburger-menu-line\"></div>\n                    </div>\n                </nav>\n            </header>\n        </div>\n    )\n}","import { useTranslation } from 'react-i18next';\nimport './LanguageSelection.css';\n\nexport function LanguageSelection() {\n    const {t, i18n} = useTranslation();\n\n    function getCurrentLanguage() {\n        if (i18n.language === 'es') {\n            return 'es';\n        }\n    }\n\n    return (\n        <div id='language-selection'>\n            <label id='language-selection-label' htmlFor='language-selection-dropdown'>{t('Language') + ':'}</label>\n            <select id='language-selection-dropdown' onChange={(e) => i18n.changeLanguage(e.target.value)} value={getCurrentLanguage()}>\n                <option value='en'>English</option>\n                <option value='es'>Español</option>\n            </select>\n        </div>\n    )\n}","import { LanguageSelection } from './../LanguageSelection.js';\nimport './../LanguageSelection.css';\n\nexport function Footer() {\n    return (\n            <footer>\n                <div id='language-selection-container'>\n                    <LanguageSelection />\n                </div>\n            </footer>\n    );    \n}","import {Header} from \"./Header.js\";\nimport {Footer} from \"./Footer.js\";\n\nexport function Layout({children}) {\n    return (\n        <div>\n            <Header />\n            <div>\n                {children}\n            </div>\n            <Footer />\n        </div>\n    )\n}","import { HashRouter as Router } from 'react-router-dom';\nimport { Routes } from './components/Routes.js'\nimport './App.css';\nimport { Layout } from './components/Layout/Layout.js';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Router basename='/'>\n            <Routes />\n        </Router>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nimport translationEN from './translations/translationEN.json';\nimport translationES from './translations/translationES.json';\n\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  es: {\n    translation: translationES\n  }\n};\n\nconst detectOptions = {\n  // order and from where user language should be detected\n  order: ['querystring', 'navigator']\n};\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources,\n    fallbackLng: 'en',\n    debug: true,\n    supportedLngs: ['en', 'es'],\n    detection: detectOptions,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback=\"Loading\">\n      <HashRouter>\n        <App />\n      </HashRouter>\n     </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}